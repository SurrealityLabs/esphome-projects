esphome:
  name: fan-control
  platform: ESP8266
  board: esp12e

wifi:
  ssid: !secret wifi_ssid
  password: !secret wifi_password

  # Enable fallback hotspot (captive portal) in case wifi connection fails
  ap:
    ssid: "Fan-Control Fallback Hotspot"
    password: !secret portal_password

captive_portal:

# Enable logging
logger:

# Enable Home Assistant API
api:
  password: !secret api_password

ota:
  password: !secret ota_password

#remote_receiver:
#  pin: GPIO13
#  dump: nec

globals:
  - id: power_state
    type: int
    restore_value: no
    initial_value: '0'
  - id: oscillation_state
    type: int
    restore_value: no
    initial_value: '0'

remote_transmitter:
  pin: GPIO4
  carrier_duty_percent: 50%

fan:
  - platform: binary
    output: fan_power
    name: "Noma Fan"
    oscillation_output: fan_oscillate

output:
  - platform: template
    id: fan_power
    type: binary
    write_action:
      - if:
          condition:
            lambda: return ((state) && (id(power_state) == 0));
          then:
            - remote_transmitter.transmit_nec:
                address: 0x0cf3
                command: 0xe916
            - lambda: id(power_state) = 1;
            - lambda: id(oscillation_state) = 0;
      - if:
          condition:
            lambda: return ((!state) && (id(power_state) == 1));
          then:
            - remote_transmitter.transmit_nec:
                address: 0x0cf3
                command: 0xe916
            - lambda: id(power_state) = 0;
  - platform: template
    id: fan_oscillate
    type: binary
    write_action:
      - if:
          condition:
            lambda: return ((state) && (id(oscillation_state) == 0));
          then:
            - remote_transmitter.transmit_nec:
                address: 0x0cf3
                command: 0x619e
            - lambda: id(oscillation_state) = 1;
      - if:
          condition:
            lambda: return ((!state) && (id(oscillation_state) == 1));
          then:
            - remote_transmitter.transmit_nec:
                address: 0x0cf3
                command: 0x619e
            - lambda: id(oscillation_state) = 0;
#0xe11e is speed control